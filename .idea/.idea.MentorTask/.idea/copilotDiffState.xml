<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/CarBack/Controllers/HomeController.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/Controllers/HomeController.cs" />
              <option name="originalContent" value="using System.Diagnostics;&#10;using Microsoft.AspNetCore.Mvc;&#10;using CarBack.Models;&#10;&#10;namespace CarBack.Controllers;&#10;&#10;public class HomeController : Controller&#10;{&#10;    private readonly ILogger&lt;HomeController&gt; _logger;&#10;&#10;    public HomeController(ILogger&lt;HomeController&gt; logger)&#10;    {&#10;        _logger = logger;&#10;    }&#10;&#10;    public IActionResult Index()&#10;    {&#10;        return View();&#10;    }&#10;&#10;    public IActionResult Privacy()&#10;    {&#10;        return View();&#10;    }&#10;&#10;    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]&#10;    public IActionResult Error()&#10;    {&#10;        return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });&#10;    }&#10;}" />
              <option name="updatedContent" value="using System.Diagnostics;&#10;using Microsoft.AspNetCore.Mvc;&#10;using Microsoft.EntityFrameworkCore;&#10;using CarBack.Models;&#10;using CarBack.Data;&#10;&#10;namespace CarBack.Controllers;&#10;&#10;public class HomeController : Controller&#10;{&#10;    private readonly ILogger&lt;HomeController&gt; _logger;&#10;    private readonly CarDbContext _context;&#10;&#10;    public HomeController(ILogger&lt;HomeController&gt; logger, CarDbContext context)&#10;    {&#10;        _logger = logger;&#10;        _context = context;&#10;    }&#10;&#10;    public async Task&lt;IActionResult&gt; Index()&#10;    {&#10;        var brands = await _context.Brands.ToListAsync();&#10;        return View(brands);&#10;    }&#10;&#10;    public async Task&lt;IActionResult&gt; Models(int id)&#10;    {&#10;        var brand = await _context.Brands&#10;            .Include(b =&gt; b.CarModels)&#10;            .FirstOrDefaultAsync(b =&gt; b.Id == id);&#10;&#10;        if (brand == null)&#10;        {&#10;            return NotFound();&#10;        }&#10;&#10;        return View(brand);&#10;    }&#10;&#10;    public async Task&lt;IActionResult&gt; ModelDetail(int id)&#10;    {&#10;        var carModel = await _context.CarModels&#10;            .Include(c =&gt; c.Brand)&#10;            .FirstOrDefaultAsync(c =&gt; c.Id == id);&#10;&#10;        if (carModel == null)&#10;        {&#10;            return NotFound();&#10;        }&#10;&#10;        return View(carModel);&#10;    }&#10;&#10;    public IActionResult Privacy()&#10;    {&#10;        return View();&#10;    }&#10;&#10;    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]&#10;    public IActionResult Error()&#10;    {&#10;        return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/CarBack/Data/CarDbContext.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/Data/CarDbContext.cs" />
              <option name="updatedContent" value="using Microsoft.EntityFrameworkCore;&#10;using CarBack.Models;&#10;&#10;namespace CarBack.Data&#10;{&#10;    public class CarDbContext : DbContext&#10;    {&#10;        public CarDbContext(DbContextOptions&lt;CarDbContext&gt; options) : base(options)&#10;        {&#10;        }&#10;&#10;        public DbSet&lt;Brand&gt; Brands { get; set; }&#10;        public DbSet&lt;CarModel&gt; CarModels { get; set; }&#10;&#10;        protected override void OnModelCreating(ModelBuilder modelBuilder)&#10;        {&#10;            base.OnModelCreating(modelBuilder);&#10;&#10;            // Configure relationships&#10;            modelBuilder.Entity&lt;CarModel&gt;()&#10;                .HasOne(c =&gt; c.Brand)&#10;                .WithMany(b =&gt; b.CarModels)&#10;                .HasForeignKey(c =&gt; c.BrandId);&#10;&#10;            // Seed data&#10;            modelBuilder.Entity&lt;Brand&gt;().HasData(&#10;                new Brand { Id = 1, Name = &quot;BMW&quot;, Logo = &quot;&quot;, Country = &quot;Almanya&quot; },&#10;                new Brand { Id = 2, Name = &quot;Mercedes&quot;, Logo = &quot;&quot;, Country = &quot;Almanya&quot; },&#10;                new Brand { Id = 3, Name = &quot;Audi&quot;, Logo = &quot;&quot;, Country = &quot;Almanya&quot; },&#10;                new Brand { Id = 4, Name = &quot;Toyota&quot;, Logo = &quot;&quot;, Country = &quot;Japonya&quot; },&#10;                new Brand { Id = 5, Name = &quot;Honda&quot;, Logo = &quot;&quot;, Country = &quot;Japonya&quot; },&#10;                new Brand { Id = 6, Name = &quot;Ford&quot;, Logo = &quot;&quot;, Country = &quot;ABD&quot; }&#10;            );&#10;&#10;            modelBuilder.Entity&lt;CarModel&gt;().HasData(&#10;                // BMW Models&#10;                new CarModel { Id = 1, Name = &quot;3 Series&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;2.0L Turbo&quot;, Price = 850000, Image = &quot;&quot;, BrandId = 1 },&#10;                new CarModel { Id = 2, Name = &quot;5 Series&quot;, Year = &quot;2023&quot;, FuelType = &quot;Dizel&quot;, Engine = &quot;3.0L Turbo&quot;, Price = 1200000, Image = &quot;&quot;, BrandId = 1 },&#10;                new CarModel { Id = 3, Name = &quot;X5&quot;, Year = &quot;2023&quot;, FuelType = &quot;Hibrit&quot;, Engine = &quot;3.0L Hybrid&quot;, Price = 1800000, Image = &quot;&quot;, BrandId = 1 },&#10;&#10;                // Mercedes Models&#10;                new CarModel { Id = 4, Name = &quot;C-Class&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;2.0L Turbo&quot;, Price = 900000, Image = &quot;&quot;, BrandId = 2 },&#10;                new CarModel { Id = 5, Name = &quot;E-Class&quot;, Year = &quot;2023&quot;, FuelType = &quot;Dizel&quot;, Engine = &quot;2.9L Turbo&quot;, Price = 1300000, Image = &quot;&quot;, BrandId = 2 },&#10;                new CarModel { Id = 6, Name = &quot;GLE&quot;, Year = &quot;2023&quot;, FuelType = &quot;Hibrit&quot;, Engine = &quot;3.0L Hybrid&quot;, Price = 2000000, Image = &quot;&quot;, BrandId = 2 },&#10;&#10;                // Audi Models&#10;                new CarModel { Id = 7, Name = &quot;A4&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;2.0L TFSI&quot;, Price = 800000, Image = &quot;&quot;, BrandId = 3 },&#10;                new CarModel { Id = 8, Name = &quot;A6&quot;, Year = &quot;2023&quot;, FuelType = &quot;Dizel&quot;, Engine = &quot;3.0L TDI&quot;, Price = 1100000, Image = &quot;&quot;, BrandId = 3 },&#10;                new CarModel { Id = 9, Name = &quot;Q7&quot;, Year = &quot;2023&quot;, FuelType = &quot;Hibrit&quot;, Engine = &quot;3.0L e-tron&quot;, Price = 1900000, Image = &quot;&quot;, BrandId = 3 },&#10;&#10;                // Toyota Models&#10;                new CarModel { Id = 10, Name = &quot;Camry&quot;, Year = &quot;2023&quot;, FuelType = &quot;Hibrit&quot;, Engine = &quot;2.5L Hybrid&quot;, Price = 650000, Image = &quot;&quot;, BrandId = 4 },&#10;                new CarModel { Id = 11, Name = &quot;Corolla&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;1.6L&quot;, Price = 450000, Image = &quot;&quot;, BrandId = 4 },&#10;                new CarModel { Id = 12, Name = &quot;RAV4&quot;, Year = &quot;2023&quot;, FuelType = &quot;Hibrit&quot;, Engine = &quot;2.5L Hybrid&quot;, Price = 750000, Image = &quot;&quot;, BrandId = 4 },&#10;&#10;                // Honda Models&#10;                new CarModel { Id = 13, Name = &quot;Civic&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;1.5L Turbo&quot;, Price = 550000, Image = &quot;&quot;, BrandId = 5 },&#10;                new CarModel { Id = 14, Name = &quot;Accord&quot;, Year = &quot;2023&quot;, FuelType = &quot;Hibrit&quot;, Engine = &quot;2.0L Hybrid&quot;, Price = 700000, Image = &quot;&quot;, BrandId = 5 },&#10;                new CarModel { Id = 15, Name = &quot;CR-V&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;1.5L Turbo&quot;, Price = 650000, Image = &quot;&quot;, BrandId = 5 },&#10;&#10;                // Ford Models&#10;                new CarModel { Id = 16, Name = &quot;Focus&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;1.0L EcoBoost&quot;, Price = 480000, Image = &quot;&quot;, BrandId = 6 },&#10;                new CarModel { Id = 17, Name = &quot;Mustang&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;5.0L V8&quot;, Price = 1500000, Image = &quot;️&quot;, BrandId = 6 },&#10;                new CarModel { Id = 18, Name = &quot;Explorer&quot;, Year = &quot;2023&quot;, FuelType = &quot;Benzin&quot;, Engine = &quot;3.0L V6&quot;, Price = 900000, Image = &quot;&quot;, BrandId = 6 }&#10;            );&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/CarBack/Models/Brand.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/Models/Brand.cs" />
              <option name="updatedContent" value="namespace CarBack.Models&#10;{&#10;    public class Brand&#10;    {&#10;        public int Id { get; set; }&#10;        public string Name { get; set; } = string.Empty;&#10;        public string Logo { get; set; } = string.Empty;&#10;        public string Country { get; set; } = string.Empty;&#10;        &#10;        // Navigation property&#10;        public ICollection&lt;CarModel&gt; CarModels { get; set; } = new List&lt;CarModel&gt;();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/CarBack/Models/CarModel.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/Models/CarModel.cs" />
              <option name="updatedContent" value="namespace CarBack.Models&#10;{&#10;    public class CarModel&#10;    {&#10;        public int Id { get; set; }&#10;        public string Name { get; set; } = string.Empty;&#10;        public string Year { get; set; } = string.Empty;&#10;        public string FuelType { get; set; } = string.Empty;&#10;        public string Engine { get; set; } = string.Empty;&#10;        public decimal Price { get; set; }&#10;        public string Image { get; set; } = string.Empty;&#10;        &#10;        // Foreign key&#10;        public int BrandId { get; set; }&#10;        &#10;        // Navigation property&#10;        public Brand Brand { get; set; } = null!;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/CarBack/Program.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/Program.cs" />
              <option name="originalContent" value="var builder = WebApplication.CreateBuilder(args);&#10;&#10;// Add services to the container.&#10;builder.Services.AddControllersWithViews();&#10;&#10;var app = builder.Build();&#10;&#10;// Configure the HTTP request pipeline.&#10;if (!app.Environment.IsDevelopment())&#10;{&#10;    app.UseExceptionHandler(&quot;/Home/Error&quot;);&#10;    // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.&#10;    app.UseHsts();&#10;}&#10;&#10;app.UseHttpsRedirection();&#10;app.UseRouting();&#10;&#10;app.UseAuthorization();&#10;&#10;app.MapStaticAssets();&#10;&#10;app.MapControllerRoute(&#10;        name: &quot;default&quot;,&#10;        pattern: &quot;{controller=Home}/{action=Index}/{id?}&quot;)&#10;    .WithStaticAssets();&#10;&#10;&#10;app.Run();" />
              <option name="updatedContent" value="using Microsoft.EntityFrameworkCore;&#13;&#10;using CarBack.Data;&#13;&#10;&#13;&#10;var builder = WebApplication.CreateBuilder(args);&#13;&#10;&#13;&#10;// Add services to the container.&#13;&#10;builder.Services.AddControllersWithViews();&#13;&#10;&#13;&#10;// Add Entity Framework&#13;&#10;builder.Services.AddDbContext&lt;CarDbContext&gt;(options =&gt;&#13;&#10;    options.UseSqlServer(builder.Configuration.GetConnectionString(&quot;DefaultConnection&quot;)));&#13;&#10;&#13;&#10;var app = builder.Build();&#13;&#10;&#13;&#10;// Configure the HTTP request pipeline.&#13;&#10;if (!app.Environment.IsDevelopment())&#13;&#10;{&#13;&#10;    app.UseExceptionHandler(&quot;/Home/Error&quot;);&#13;&#10;    // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.&#13;&#10;    app.UseHsts();&#13;&#10;}&#13;&#10;&#13;&#10;app.UseHttpsRedirection();&#13;&#10;app.UseRouting();&#13;&#10;&#13;&#10;app.UseAuthorization();&#13;&#10;&#13;&#10;app.MapStaticAssets();&#13;&#10;&#13;&#10;app.MapControllerRoute(&#13;&#10;        name: &quot;default&quot;,&#13;&#10;        pattern: &quot;{controller=Home}/{action=Index}/{id?}&quot;)&#13;&#10;    .WithStaticAssets();&#13;&#10;&#13;&#10;&#13;&#10;app.Run();" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/CarBack/Views/Home/Index.cshtml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/Views/Home/Index.cshtml" />
              <option name="originalContent" value="@{&#10;    ViewData[&quot;Title&quot;] = &quot;Home Page&quot;;&#10;}&#10;&#10;&lt;div class=&quot;text-center&quot;&gt;&#10;    &lt;h1 class=&quot;display-4&quot;&gt;Welcome&lt;/h1&gt;&#10;    &lt;p&gt;Learn about &lt;a href=&quot;https://learn.microsoft.com/aspnet/core&quot;&gt;building Web apps with ASP.NET Core&lt;/a&gt;.&lt;/p&gt;&#10;&lt;/div&gt;" />
              <option name="updatedContent" value="@model List&lt;CarBack.Models.Brand&gt;&#10;@{&#10;    ViewData[&quot;Title&quot;] = &quot;Araç Markaları&quot;;&#10;}&#10;&#10;&lt;div class=&quot;container mt-4&quot;&gt;&#10;    &lt;h1 class=&quot;text-center mb-4&quot;&gt;Araç Markaları&lt;/h1&gt;&#10;    &#10;    &lt;div class=&quot;row&quot;&gt;&#10;        @foreach (var brand in Model)&#10;        {&#10;            &lt;div class=&quot;col-md-4 mb-4&quot;&gt;&#10;                &lt;div class=&quot;card h-100 shadow-sm&quot;&gt;&#10;                    &lt;div class=&quot;card-body text-center&quot;&gt;&#10;                        &lt;div class=&quot;display-1 mb-3&quot;&gt;@brand.Logo&lt;/div&gt;&#10;                        &lt;h5 class=&quot;card-title&quot;&gt;@brand.Name&lt;/h5&gt;&#10;                        &lt;p class=&quot;card-text text-muted&quot;&gt;@brand.Country&lt;/p&gt;&#10;                        &lt;a href=&quot;@Url.Action(&quot;Models&quot;, &quot;Home&quot;, new { id = brand.Id })&quot; class=&quot;btn btn-primary&quot;&gt;&#10;                            Modelleri Gör&#10;                        &lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        }&#10;    &lt;/div&gt;&#10;&lt;/div&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/CarBack/Views/Home/ModelDetail.cshtml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/Views/Home/ModelDetail.cshtml" />
              <option name="updatedContent" value="@model CarBack.Models.CarModel&#10;@{&#10;    ViewData[&quot;Title&quot;] = $&quot;{Model.Brand.Name} {Model.Name}&quot;;&#10;}&#10;&#10;&lt;div class=&quot;container mt-4&quot;&gt;&#10;    &lt;div class=&quot;row mb-4&quot;&gt;&#10;        &lt;div class=&quot;col-12&quot;&gt;&#10;            &lt;a href=&quot;@Url.Action(&quot;Models&quot;, &quot;Home&quot;, new { id = Model.BrandId })&quot; class=&quot;btn btn-secondary mb-3&quot;&gt;&#10;                ← @Model.Brand.Name Modellerine Dön&#10;            &lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &#10;    &lt;div class=&quot;row justify-content-center&quot;&gt;&#10;        &lt;div class=&quot;col-lg-8&quot;&gt;&#10;            &lt;div class=&quot;card shadow&quot;&gt;&#10;                &lt;div class=&quot;card-body&quot;&gt;&#10;                    &lt;div class=&quot;text-center mb-4&quot;&gt;&#10;                        &lt;span class=&quot;display-1&quot;&gt;@Model.Image&lt;/span&gt;&#10;                        &lt;h1 class=&quot;mt-3&quot;&gt;@Model.Brand.Name @Model.Name&lt;/h1&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;row&quot;&gt;&#10;                        &lt;div class=&quot;col-md-6&quot;&gt;&#10;                            &lt;h5&gt;Teknik Özellikler&lt;/h5&gt;&#10;                            &lt;table class=&quot;table table-borderless&quot;&gt;&#10;                                &lt;tr&gt;&#10;                                    &lt;td&gt;&lt;strong&gt;Marka:&lt;/strong&gt;&lt;/td&gt;&#10;                                    &lt;td&gt;@Model.Brand.Name (@Model.Brand.Country)&lt;/td&gt;&#10;                                &lt;/tr&gt;&#10;                                &lt;tr&gt;&#10;                                    &lt;td&gt;&lt;strong&gt;Model:&lt;/strong&gt;&lt;/td&gt;&#10;                                    &lt;td&gt;@Model.Name&lt;/td&gt;&#10;                                &lt;/tr&gt;&#10;                                &lt;tr&gt;&#10;                                    &lt;td&gt;&lt;strong&gt;Yıl:&lt;/strong&gt;&lt;/td&gt;&#10;                                    &lt;td&gt;@Model.Year&lt;/td&gt;&#10;                                &lt;/tr&gt;&#10;                                &lt;tr&gt;&#10;                                    &lt;td&gt;&lt;strong&gt;Yakıt Tipi:&lt;/strong&gt;&lt;/td&gt;&#10;                                    &lt;td&gt;@Model.FuelType&lt;/td&gt;&#10;                                &lt;/tr&gt;&#10;                                &lt;tr&gt;&#10;                                    &lt;td&gt;&lt;strong&gt;Motor:&lt;/strong&gt;&lt;/td&gt;&#10;                                    &lt;td&gt;@Model.Engine&lt;/td&gt;&#10;                                &lt;/tr&gt;&#10;                            &lt;/table&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;col-md-6&quot;&gt;&#10;                            &lt;h5&gt;Fiyat Bilgisi&lt;/h5&gt;&#10;                            &lt;div class=&quot;alert alert-success text-center&quot;&gt;&#10;                                &lt;h3 class=&quot;mb-0&quot;&gt;@Model.Price.ToString(&quot;C0&quot;, new System.Globalization.CultureInfo(&quot;tr-TR&quot;))&lt;/h3&gt;&#10;                                &lt;small&gt;KDV Dahil&lt;/small&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div class=&quot;d-grid gap-2 mt-4&quot;&gt;&#10;                                &lt;button class=&quot;btn btn-success btn-lg&quot; type=&quot;button&quot;&gt;&#10;                                    İletişime Geç&#10;                                &lt;/button&gt;&#10;                                &lt;button class=&quot;btn btn-outline-primary&quot; type=&quot;button&quot;&gt;&#10;                                    Test Sürüşü Talep Et&#10;                                &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/CarBack/Views/Home/Models.cshtml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/Views/Home/Models.cshtml" />
              <option name="updatedContent" value="@model CarBack.Models.Brand&#10;@{&#10;    ViewData[&quot;Title&quot;] = $&quot;{Model.Name} Modelleri&quot;;&#10;}&#10;&#10;&lt;div class=&quot;container mt-4&quot;&gt;&#10;    &lt;div class=&quot;row mb-4&quot;&gt;&#10;        &lt;div class=&quot;col-12&quot;&gt;&#10;            &lt;a href=&quot;@Url.Action(&quot;Index&quot;, &quot;Home&quot;)&quot; class=&quot;btn btn-secondary mb-3&quot;&gt;&#10;                ← Markalara Dön&#10;            &lt;/a&gt;&#10;            &lt;h1 class=&quot;text-center&quot;&gt;&#10;                &lt;span class=&quot;display-4 me-3&quot;&gt;@Model.Logo&lt;/span&gt;&#10;                @Model.Name Modelleri&#10;            &lt;/h1&gt;&#10;            &lt;p class=&quot;text-center text-muted&quot;&gt;@Model.Country&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &#10;    &lt;div class=&quot;row&quot;&gt;&#10;        @foreach (var carModel in Model.CarModels)&#10;        {&#10;            &lt;div class=&quot;col-md-6 col-lg-4 mb-4&quot;&gt;&#10;                &lt;div class=&quot;card h-100 shadow-sm&quot;&gt;&#10;                    &lt;div class=&quot;card-body&quot;&gt;&#10;                        &lt;div class=&quot;text-center mb-3&quot;&gt;&#10;                            &lt;span class=&quot;display-4&quot;&gt;@carModel.Image&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;h5 class=&quot;card-title&quot;&gt;@carModel.Name&lt;/h5&gt;&#10;                        &lt;p class=&quot;card-text&quot;&gt;&#10;                            &lt;strong&gt;Yıl:&lt;/strong&gt; @carModel.Year&lt;br&gt;&#10;                            &lt;strong&gt;Yakıt:&lt;/strong&gt; @carModel.FuelType&lt;br&gt;&#10;                            &lt;strong&gt;Motor:&lt;/strong&gt; @carModel.Engine&lt;br&gt;&#10;                            &lt;strong&gt;Fiyat:&lt;/strong&gt; @carModel.Price.ToString(&quot;C0&quot;, new System.Globalization.CultureInfo(&quot;tr-TR&quot;))&#10;                        &lt;/p&gt;&#10;                        &lt;a href=&quot;@Url.Action(&quot;ModelDetail&quot;, &quot;Home&quot;, new { id = carModel.Id })&quot; class=&quot;btn btn-primary w-100&quot;&gt;&#10;                            Detayları Gör&#10;                        &lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        }&#10;    &lt;/div&gt;&#10;&lt;/div&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/CarBack/appsettings.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CarBack/appsettings.json" />
              <option name="originalContent" value="{&#10;  &quot;Logging&quot;: {&#10;    &quot;LogLevel&quot;: {&#10;      &quot;Default&quot;: &quot;Information&quot;,&#10;      &quot;Microsoft.AspNetCore&quot;: &quot;Warning&quot;&#10;    }&#10;  },&#10;  &quot;AllowedHosts&quot;: &quot;*&quot;&#10;}&#10;" />
              <option name="updatedContent" value="{&#10;  &quot;ConnectionStrings&quot;: {&#10;    &quot;DefaultConnection&quot;: &quot;Server=(localdb)\\mssqllocaldb;Database=CarBackDb;Trusted_Connection=true;MultipleActiveResultSets=true&quot;&#10;  },&#10;  &quot;Logging&quot;: {&#10;    &quot;LogLevel&quot;: {&#10;      &quot;Default&quot;: &quot;Information&quot;,&#10;      &quot;Microsoft.AspNetCore&quot;: &quot;Warning&quot;&#10;    }&#10;  },&#10;  &quot;AllowedHosts&quot;: &quot;*&quot;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>